digraph "classes_MyProject" {
rankdir=BT
charset="utf-8"
"backend.metric_system.metric.ComputableMetric" [color="black", fontcolor="black", label=<{ComputableMetric|<br ALIGN="LEFT"/>|<I>final_update</I>(stat_helper: TweetAnalyticsHelper)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.metric.DependentMetric" [color="black", fontcolor="black", label=<{DependentMetric|<br ALIGN="LEFT"/>|add_dependencies(metric_names: set[str])<br ALIGN="LEFT"/>add_dependency(metric_name: str)<br ALIGN="LEFT"/>get_dependencies(): set[str]<br ALIGN="LEFT"/>get_metric(metric_name: str): dict[str, Metric]<br ALIGN="LEFT"/>is_a_dependency(metric_name: str): bool<br ALIGN="LEFT"/>set_metric_container(metric_container: MetricContainer)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.generators.gen_likes_per_follower.GenLikesPerFollower" [color="black", fontcolor="black", label=<{GenLikesPerFollower|<br ALIGN="LEFT"/>|generate_metrics(stat_helper)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.metric.Metric" [color="black", fontcolor="black", label=<{Metric|metric_encoder : MetricEncoder<br ALIGN="LEFT"/>|flag_as_error()<br ALIGN="LEFT"/>get_data()<br ALIGN="LEFT"/>get_metric_name(): str<br ALIGN="LEFT"/>get_owner(): str<br ALIGN="LEFT"/>is_error(): bool<br ALIGN="LEFT"/>set_data(data)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.metric.MetricGenerator" [color="black", fontcolor="black", label=<{MetricGenerator|<br ALIGN="LEFT"/>|generate_and_validate(stat_helper: TweetAnalyticsHelper): list[Metric]<br ALIGN="LEFT"/><I>generate_metrics</I>(stat_helper: TweetAnalyticsHelper): list[Metric]<br ALIGN="LEFT"/>get_expected_metric_names(): set[str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.metric.OverTweetMetric" [color="black", fontcolor="black", label=<{OverTweetMetric|<br ALIGN="LEFT"/>|<I>tweet_update</I>(tweet: Tweet)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.generators.gen_pearson_correlation_stat_generator.PearsonCorrelationProfileStatGenerator" [color="black", fontcolor="black", label=<{PearsonCorrelationProfileStatGenerator|prop_list : list<br ALIGN="LEFT"/>|gen_pearson_correlations_for_profile(profile_plus: ProfileWithTweetProperties): list[Metric]<br ALIGN="LEFT"/>generate_metrics(stat_helper: TweetAnalyticsHelper): list[Metric]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.generators.gen_standard_profile_stat_gen.StandardProfileStatGenerator" [color="black", fontcolor="black", label=<{StandardProfileStatGenerator|<br ALIGN="LEFT"/>|gen_standard_stats_for_all_profiles(stat_helper: TweetAnalyticsHelper): List[Metric]<br ALIGN="LEFT"/>gen_standard_stats_for_profile(profile_plus: ProfileWithTweetProperties): List[Metric]<br ALIGN="LEFT"/>generate_metrics(stat_helper: TweetAnalyticsHelper): List[Metric]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.generators.gen_standard_profile_stat_over_time.StandardProfileStatOverTimeGenerator" [color="black", fontcolor="black", label=<{StandardProfileStatOverTimeGenerator|property_list : list<br ALIGN="LEFT"/>|gen_standard_stats_for_all_profiles(stat_helper: TweetAnalyticsHelper): List[Metric]<br ALIGN="LEFT"/>gen_standard_stats_for_profile(profile_plus: ProfileWithTweetProperties): List[Metric]<br ALIGN="LEFT"/>generate_metrics(stat_helper: TweetAnalyticsHelper): List[Metric]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.generators.gen_standard_profile_stat_over_time_weekly.StandardProfileStatOverWeekGeneratorWeekly" [color="black", fontcolor="black", label=<{StandardProfileStatOverWeekGeneratorWeekly|property_list : list<br ALIGN="LEFT"/>|gen_standard_stats_for_all_profiles(stat_helper: TweetAnalyticsHelper): List[Metric]<br ALIGN="LEFT"/>gen_standard_stats_for_profile(profile_plus: ProfileWithTweetProperties): List[Metric]<br ALIGN="LEFT"/>generate_metrics(stat_helper: TweetAnalyticsHelper): List[Metric]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.metrics.metric_word_frequency.WordFrequencyMetric" [color="black", fontcolor="black", label=<{WordFrequencyMetric|count : int<br ALIGN="LEFT"/>english_words : NoneType, set<br ALIGN="LEFT"/>return_count : int<br ALIGN="LEFT"/>stop_words : NoneType, set<br ALIGN="LEFT"/>words : dict<br ALIGN="LEFT"/>|final_update(stat_helper)<br ALIGN="LEFT"/>tweet_update(tweet)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"backend.metric_system.generators.gen_likes_per_follower.GenLikesPerFollower" -> "backend.metric_system.metric.DependentMetric" [arrowhead="empty", arrowtail="none"];
"backend.metric_system.generators.gen_likes_per_follower.GenLikesPerFollower" -> "backend.metric_system.metric.MetricGenerator" [arrowhead="empty", arrowtail="none"];
"backend.metric_system.generators.gen_pearson_correlation_stat_generator.PearsonCorrelationProfileStatGenerator" -> "backend.metric_system.metric.MetricGenerator" [arrowhead="empty", arrowtail="none"];
"backend.metric_system.generators.gen_standard_profile_stat_gen.StandardProfileStatGenerator" -> "backend.metric_system.metric.MetricGenerator" [arrowhead="empty", arrowtail="none"];
"backend.metric_system.generators.gen_standard_profile_stat_over_time.StandardProfileStatOverTimeGenerator" -> "backend.metric_system.metric.MetricGenerator" [arrowhead="empty", arrowtail="none"];
"backend.metric_system.generators.gen_standard_profile_stat_over_time_weekly.StandardProfileStatOverWeekGeneratorWeekly" -> "backend.metric_system.metric.MetricGenerator" [arrowhead="empty", arrowtail="none"];
"backend.metric_system.metric.ComputableMetric" -> "backend.metric_system.metric.Metric" [arrowhead="empty", arrowtail="none"];
"backend.metric_system.metric.OverTweetMetric" -> "backend.metric_system.metric.ComputableMetric" [arrowhead="empty", arrowtail="none"];
"backend.metric_system.metrics.metric_word_frequency.WordFrequencyMetric" -> "backend.metric_system.metric.OverTweetMetric" [arrowhead="empty", arrowtail="none"];
}
